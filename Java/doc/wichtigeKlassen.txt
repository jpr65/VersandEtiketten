// Wichtige Klassen meines Java-Demo-Projekts 
//
//     Versand Etiketten Formatierung
//
// ------------------------------------------------------------------

// === Datenklassen =====================================================

package Daten;

//Datenklasse für Kunden
public class Kunde {
	public String PKID;
	
	public Boolean PrivatKunde;

	public String Titel;
	public String Name;
	public String Vorname;

	public String Firma;
	public String Abteilung;
}

// Datenklasse für Adressen
public class Adresse {
	public String PKID;
	
	public String Strasse;
	public String Hausnummer;
	public String Ort;
	public String PostLeitInfo; // enthält die Postleitzzahl (PLZ)
}

// Datenklasse für Etikett, Variante 1
public class EtikettVariante1 {
	public List<String> anschriftZeilen;
	// hier folgen üblicherweise weitere Daten
}

// === Integrationsklassen ==================================================================

package Integratoren;

public class VersandEtikettenErstellen {
	
	public MiddelWareInterface MWI = new MiddelWareInterface();
	
	public EtikettVariante1 VersandEtikettVariante1(String kundeID, String adresseID, String laenderKennung, String weitereID) {
		EtikettVariante1 erstelltesEtikett = new EtikettVariante1();
		erstelltesEtikett.anschriftZeilen = this.AnschriftErstellung(kundeID, adresseID, laenderKennung);
		
		return erstelltesEtikett;
	}
	
	public List<String> AnschriftErstellung(String kundeID, String adresseID, String laenderKennung) {
		Kunde kunde = MWI.LeseKunde(kundeID);
		Adresse adresse = MWI.LeseAdresse(adresseID);
		
		IAnschriftFormatierer anschriftFormatierer = Integratoren.OperatorFactory.BuildAnschriftFormatierer(laenderKennung);
		
		return anschriftFormatierer.AnschriftErstellung(kunde, adresse);
	}
}















// === Operationsklassen ==================================================================

package Operationen;

// Operation: Anschrift formatieren, deutsche Variante
public class GermanAnschriftFormatierer implements IAnschriftFormatierer {

	@Override
	public List<String> AnschriftErstellung(Kunde kundeArg, Adresse adresseArg) {
		ArrayList<String> anschriftListe = new ArrayList<String>();
		
		if (kundeArg.PrivatKunde) {
			anschriftListe = this.KundeAnschriftErstellung(anschriftListe, kundeArg);
		}
		else {
			anschriftListe = this.FirmaAnschriftErstellung(anschriftListe, kundeArg);
		}
		
		anschriftListe = this.AdresseErstellung(anschriftListe, adresseArg);
		
		return anschriftListe;
	}

	private ArrayList<String> KundeAnschriftErstellung(ArrayList<String> anschriftListe, Kunde kundeArg) {
		String zeileNamen = kundeArg.Vorname + " " + kundeArg.Name;
		anschriftListe.add(zeileNamen);
		
		return anschriftListe;
	}
	
	private ArrayList<String> FirmaAnschriftErstellung(ArrayList<String> anschriftListe, Kunde kundeArg) {
		anschriftListe.add(kundeArg.Firma);
		if (!kundeArg.Abteilung.isBlank()) {
			anschriftListe.add(kundeArg.Abteilung);
		}
		
		return anschriftListe;
	}

	private ArrayList<String> AdresseErstellung(ArrayList<String> anschriftListe, Adresse adresseArg) {
		anschriftListe.add(this.ErstelleStrasseZeile(adresseArg));
		anschriftListe.add(this.ErstelleOrtsZeile(adresseArg));
		return anschriftListe;
	}

	private String ErstelleStrasseZeile(Adresse adresseArg) {
		String strasseZeile = adresseArg.Strasse;
		
		if (!adresseArg.Hausnummer.isBlank()) {
			if (!strasseZeile.isBlank()) {
				strasseZeile += " ";
			}
			
			strasseZeile += adresseArg.Hausnummer;
		}
		
		return strasseZeile;
	}

	private String ErstelleOrtsZeile(Adresse adresseArg) {
		String ortZeile = adresseArg.PostLeitInfo + " " + adresseArg.Ort;
		
		return ortZeile;
	}
}
